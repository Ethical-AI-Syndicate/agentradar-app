{
  "name": "agentradar-scripts",
  "version": "1.0.0",
  "description": "AgentRadar multi-platform command orchestration",
  "scripts": {
    "// ===== QUICK START =====": "",
    "dev:all": "concurrently -n web,api,scrapers \"npm run dev:web\" \"npm run dev:api\" \"npm run dev:scrapers\"",
    "dev:web": "cd web-app && npm run dev",
    "dev:mobile": "cd mobile && npm run start",
    "dev:desktop": "cd desktop && npm run dev",
    "dev:api": "cd api && npm run dev",
    "dev:scrapers": "cd scrapers && npm run dev",
    
    "// ===== BUILD COMMANDS =====": "",
    "build:all": "npm run build:web && npm run build:api && npm run build:scrapers",
    "build:web": "cd web-app && npm run build",
    "build:mobile:ios": "cd mobile && eas build --platform ios",
    "build:mobile:android": "cd mobile && eas build --platform android",
    "build:desktop:all": "npm run build:desktop:win && npm run build:desktop:mac && npm run build:desktop:linux",
    "build:desktop:win": "cd desktop && npm run build:win",
    "build:desktop:mac": "cd desktop && npm run build:mac",
    "build:desktop:linux": "cd desktop && npm run build:linux",
    
    "// ===== DATABASE COMMANDS =====": "",
    "db:setup": "npx prisma migrate dev --name init && npm run db:seed",
    "db:migrate": "npx prisma migrate dev",
    "db:migrate:prod": "npx prisma migrate deploy",
    "db:reset": "npx prisma migrate reset",
    "db:seed": "npx prisma db seed",
    "db:studio": "npx prisma studio",
    "db:backup": "node scripts/backup-database.js",
    "db:restore": "node scripts/restore-database.js",
    "db:clean": "node scripts/clean-old-records.js",
    
    "// ===== SCRAPER COMMANDS =====": "",
    "scraper:all": "node scrapers/run-all.js",
    "scraper:power-of-sale": "node scrapers/gta/power-of-sale.js",
    "scraper:development": "node scrapers/gta/development-apps.js",
    "scraper:mpac": "node scrapers/gta/mpac-assessments.js",
    "scraper:test": "jest scrapers/**/*.test.js",
    "scraper:schedule": "node scrapers/scheduler/setup-cron.js",
    "scraper:status": "node scrapers/health-check.js",
    "scraper:logs": "tail -f logs/scrapers/*.log",
    
    "// ===== TESTING COMMANDS =====": "",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "playwright test",
    "test:mobile": "cd mobile && npm test",
    "test:desktop": "cd desktop && npm test",
    "test:api": "cd api && npm test",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:complete": "npm run test && npm run test:e2e && npm run test:api",
    
    "// ===== DEPLOYMENT COMMANDS =====": "",
    "deploy:web:preview": "vercel",
    "deploy:web:prod": "vercel --prod",
    "deploy:api:prod": "npm run build:api && pm2 restart api",
    "deploy:mobile:ios": "cd mobile && fastlane ios release",
    "deploy:mobile:android": "cd mobile && fastlane android release",
    "deploy:desktop:win": "cd desktop && npm run dist:win && npm run upload:win",
    "deploy:desktop:mac": "cd desktop && npm run dist:mac && npm run upload:mac",
    
    "// ===== MONITORING COMMANDS =====": "",
    "logs:web": "vercel logs",
    "logs:api": "pm2 logs api",
    "logs:scrapers": "pm2 logs scrapers",
    "logs:all": "node scripts/aggregate-logs.js",
    "health:check": "node scripts/health-check-all.js",
    "metrics:collect": "node scripts/collect-metrics.js",
    "monitor:start": "pm2 monit",
    
    "// ===== WORKFLOW MACROS =====": "",
    "feature:create": "node scripts/create-feature.js",
    "release:production": "node scripts/production-release.js",
    "hotfix:deploy": "node scripts/hotfix-deploy.js",
    "daily:startup": "node scripts/daily-operations.js",
    "market:launch": "node scripts/launch-new-market.js",
    
    "// ===== UTILITY COMMANDS =====": "",
    "clean:all": "npm run clean:web && npm run clean:mobile && npm run clean:desktop && npm run clean:api",
    "clean:web": "cd web-app && rm -rf .next node_modules",
    "clean:mobile": "cd mobile && npx react-native-clean-project",
    "clean:desktop": "cd desktop && rm -rf dist node_modules",
    "clean:api": "cd api && rm -rf dist node_modules",
    
    "setup:dev": "npm install && npm run setup:env && npm run db:setup && npm run setup:hooks",
    "setup:env": "node scripts/setup-environment.js",
    "setup:hooks": "husky install",
    
    "generate:component": "plop component",
    "generate:page": "plop page",
    "generate:api": "plop api",
    "generate:scraper": "plop scraper",
    
    "update:deps": "npm-check-updates -u",
    "security:audit": "npm audit fix && snyk test",
    "lint:all": "npm run lint:web && npm run lint:mobile && npm run lint:api",
    "lint:web": "cd web-app && eslint . --fix",
    "lint:mobile": "cd mobile && eslint . --fix",
    "lint:api": "cd api && eslint . --fix",
    
    "// ===== MAINTENANCE COMMANDS =====": "",
    "maintenance:enable": "node scripts/maintenance-mode.js enable",
    "maintenance:disable": "node scripts/maintenance-mode.js disable",
    "maintenance:db": "node scripts/optimize-database.js",
    "maintenance:cache": "redis-cli FLUSHALL && node scripts/warm-cache.js",
    
    "// ===== DEVELOPMENT HELPERS =====": "",
    "tunnel": "ngrok http 3000",
    "analyze:bundle": "cd web-app && npm run analyze",
    "playground:graphql": "cd api && npm run graphql:playground",
    "playground:api": "node scripts/api-playground.js",
    "mock:data": "node scripts/generate-mock-data.js",
    
    "// ===== REPORTING =====": "",
    "report:weekly": "node scripts/generate-weekly-report.js",
    "report:metrics": "node scripts/generate-metrics-report.js",
    "report:errors": "node scripts/analyze-errors.js",
    
    "// ===== WHITE-LABEL DEPLOYMENT =====": "",
    "whitelabel:init": "node scripts/white-label-automation.js init",
    "whitelabel:deploy": "node scripts/white-label-automation.js deploy",
    "whitelabel:config:branding": "node scripts/white-label-automation.js configure-branding",
    "whitelabel:status": "node scripts/white-label-automation.js status",
    "whitelabel:list": "node scripts/white-label-automation.js list",
    "whitelabel:update": "node scripts/white-label-automation.js update",
    "whitelabel:backup": "node scripts/white-label-automation.js backup",
    "whitelabel:build:web": "node scripts/build-white-label-web.js",
    "whitelabel:build:mobile": "node scripts/build-white-label-mobile.js",
    "whitelabel:build:desktop": "node scripts/build-white-label-desktop.js",
    "whitelabel:complete": "node scripts/complete-white-label-setup.js",
    "whitelabel:mass-update": "node scripts/mass-update-white-labels.js",
    
    "// ===== BROKERAGE ONBOARDING =====": "",
    "brokerage:onboard": "node scripts/brokerage-onboarding.js onboard",
    "brokerage:import-agents": "node scripts/brokerage-onboarding.js import-agents",
    "brokerage:configure-regions": "node scripts/brokerage-onboarding.js configure-regions",
    "brokerage:schedule-training": "node scripts/brokerage-onboarding.js schedule-training",
    "brokerage:complete-stage": "node scripts/brokerage-onboarding.js complete-stage",
    "brokerage:status": "node scripts/brokerage-onboarding.js status",
    "brokerage:quick-launch": "node scripts/brokerage-quick-launch.js",
    "brokerage:agents:bulk-invite": "node scripts/bulk-invite-agents.js",
    "brokerage:billing:setup": "node scripts/setup-brokerage-billing.js",
    "brokerage:training:generate": "node scripts/generate-training-materials.js",
    "brokerage:analytics:dashboard": "node scripts/brokerage-analytics-dashboard.js",
    
    "// ===== ENTERPRISE OPERATIONS =====": "",
    "enterprise:migrate": "node scripts/enterprise-migration.js",
    "enterprise:compliance:audit": "node scripts/compliance-audit.js",
    "enterprise:security:scan": "node scripts/security-scan.js",
    "tenant:create": "node scripts/create-tenant.js",
    "tenant:isolate": "node scripts/isolate-tenant.js",
    "tenant:resources:allocate": "node scripts/allocate-resources.js",
    "tenant:monitor": "node scripts/monitor-tenant.js"
  },
  "devDependencies": {
    "concurrently": "^7.6.0",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.0.0",
    "husky": "^8.0.3",
    "npm-check-updates": "^16.0.0",
    "plop": "^3.1.2",
    "pm2": "^5.3.0",
    "rimraf": "^5.0.0",
    "wait-on": "^7.0.1"
  },
  "workspaces": [
    "web-app",
    "mobile",
    "desktop",
    "api",
    "scrapers",
    "shared"
  ]
}
